1.  //Thread is a class
    //Runnable is an interface
    Thread t1 = new Thread(() -> {
      //do something
    }

2.  class Blabla extends Thread {
	  @override
    public void run() {
		  //do something
	  }
    }
    new Blabla().start();
	or
    Thread t2 = new Blabla();
    
4.  We should use constructor to pass the param into run:
   
5.  Thread that is called automatically:
    new Thread(() -> {
	    //do something
    }).start();
    
6.  concurrency != synchronization

7.  Synchronization is not on the variable/classes. Synchronization is on the block/methods.
    Synchronized block/method is nothing but the thread safe block/method... so it does not allow two threads to access the resources simultaneously...

8.  Locks are methods of synchronization used to prevent multiple threads from accessing a resource at the same time.

9. 


